version: 2

jobs:
  build:
    docker:
      - image: caronae/php:latest
        environment:
          APP_ENV: testing
          APP_DEBUG: true
          APP_KEY: base64:Adh76j7g9HxvQf1vkyzKfa5yefi9KLRbygXxZxgYNTc=
      - image: postgres:9.6-alpine
        environment:
          POSTGRES_USER: caronae
          POSTGRES_DB: caronae_testing
    working_directory: /var/www
    steps:
      - checkout
      - restore_cache:
          keys:
            - composer-{{ checksum "composer.json" }}
            - composer-
      - run:
          name: Install dependencies
          command: composer install --no-interaction --no-ansi
      - save_cache:
          key: composer-{{ checksum "composer.json" }}
          paths:
            - vendor
      - run:
          name: Initialize database
          command: php artisan migrate --database=pgsql_testing
      - run:
          name: Run tests
          command: './vendor/bin/phpunit --log-junit $CIRCLE_TEST_REPORTS/phpunit/junit.xml'
      - setup_remote_docker:
          version: 17.07.0-ce
      - run:
          name: Setup Docker
          command: apk --no-cache add docker
      - run:
          name: Build Docker images
          working_directory: /var/www/images
          command: |
            if [[ "$CIRCLE_BRANCH" = "develop" || "$CIRCLE_BRANCH" = "master" ]]; then
              [[ "${CIRCLE_BRANCH}" = "master" ]] && TAG="latest" || TAG="${CIRCLE_BRANCH}"
              docker build -t caronae/backend:$TAG -f Dockerfile.app ..
              docker build -t caronae/backend-worker:$TAG -f Dockerfile.worker --build-arg BACKEND_TAG=$TAG .
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker push caronae/backend:$TAG
              docker push caronae/backend-worker:$TAG
            fi
      - deploy:
          name: Deploy to dev
          command: |
            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              TAG=develop
              ssh -o StrictHostKeyChecking=No -A $CARONAE_DEV_USER@$CARONAE_DEV_HOST -p $CARONAE_DEV_PORT bash -s < scripts/update_images.sh "$TAG"
            fi
      - deploy:
          name: Deploy to production environment
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              ssh -o StrictHostKeyChecking=No -A $CARONAE_PROD_USER@$CARONAE_PROD_HOST -p $CARONAE_PROD_PORT "cd ~/backend && git fetch origin master && git reset --hard origin/master && bash upgrade.sh"
            fi
